# This is a generated workflow and can be _overwritten_ without notice
name: check-merge

env:
WF: '{"branches": ["prod"], "id": "check-merge", "target_branches": ["prod", "dev", "qa"], "trigger_run_on_pr_to_branches": ["qa", "prod"], "wf": "cmerge", "working_dir": "."}'
REPOID: dhfdw
ENVR:

on:
workflow_dispatch:
pull_request:
branches:
- qa
- prod

jobs:
check-merge:
permissions: write-all
runs-on: ubuntu-latest

defaults:
run:
working-directory: ${{ fromJSON(env.WF)['working_dir'] }}
steps:
- name: Checkout
uses: actions/checkout@v4
with:
fetch-depth: 0
token: ${{ secrets.GHUB_TOKEN }}

- name: Init
shell: bash
run : |
echo Actor: ${{ github.actor }}
echo "DRY_RUN=no" >> $GITHUB_ENV
# [[ "${{ github.event.inputs.dry-run }}" == "true" ]] && { echo "DRY_RUN=yes" >> $GITHUB_ENV; } || { echo "DRY_RUN=no" >> $GITHUB_ENV; }
git config --global url."https://${{ secrets.GHUB_TOKEN }}@github.com".insteadOf https://github.com
git config --global --add safe.directory /__w/${GITHUB_REPOSITORY#*/}/${GITHUB_REPOSITORY#*/}
wget --header='Authorization: token ${{ secrets.GHUB_TOKEN }}' \
https://raw.githubusercontent.com/McK-Internal/CDP-DevOps/main/tf/devops/ghub/wflows/scripts/wflow.py

- name: Check
shell: bash
env:
REPO: ${{ github.repository }}
WFLOW: ${{ github.workflow }}
SHA: ${{ github.sha }}
REF: ${{ github.ref }}
WF: ${{ env.WF }}
REF_NAME: ${{ github.ref_name }}
GHUB_TOKEN: ${{ secrets.GHUB_TOKEN }}
run: |
python3 wflow.py check

- name: Checking merge
shell: bash
env:
SOURCE_BRANCH: ${{ github.head_ref }}
TARGET_BRANCH: ${{ github.base_ref }}
TARGET_BRANCHES: ${{ toJSON(fromJSON(env.WF)['target_branches']) }}
run: |
wget --header='Authorization: token ${{ secrets.GHUB_TOKEN }}' \
https://raw.githubusercontent.com/McK-Internal/CDP-DevOps/main/tf/devops/ghub/wflows/scripts/cmerge.py
python3 cmerge.py

- name: End
env:
REPO: ${{ github.repository }}
WFLOW: ${{ github.workflow }}
SHA: ${{ github.sha }}
run: |
python3 wflow.py en
